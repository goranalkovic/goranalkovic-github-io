!function(){"use strict";const s=["client/chunk.f6a778ca.js","client/about.5c2c7dad.js","client/chunk.5d5b790a.js","client/client.819bc9ff.js","client/index.9b67b2d7.js"].concat(["service-worker-index.html","favicon.png","files/cv.json","files/Goran_Alkovic_CV.pdf","files/projects.json","global.css","great-success.png","img/card-images/card-aronija.svg","img/card-images/card-brucosijada2018.svg","img/card-images/card-doseofsharks.svg","img/card-images/card-foistemgames2018.svg","img/card-images/card-foistemgames2019.svg","img/card-images/card-hipocean.svg","img/card-images/card-mladipomazu.svg","img/card-images/card-stak.svg","img/card-images/card-stemgames.svg","img/card-images/card-szfoi.svg","img/card-images/card-tjedanbrucosa.svg","img/its-a-me.jpg","img/logo/logo-v1.svg","img/logo/logo-v2.svg","img/logo/logo-v3.svg","img/logo/logo-v4.svg","img/logo/logo-v5.svg","img/logo/logo-v6.svg","img/logo/logo-v7.svg","img/logo/logo-v8.svg","img/logo/logo-v9.svg","img/projects/aronijaJuraj/1.png","img/projects/aronijaJuraj/2.png","img/projects/aronijaJuraj/3.png","img/projects/brucosijada2018/1.png","img/projects/brucosijada2018/2.png","img/projects/brucosijada2018/3.png","img/projects/brucosijada2018/4.png","img/projects/brucosijada2018/5.png","img/projects/doseOfSharks/1.png","img/projects/doseOfSharks/2.png","img/projects/doseOfSharks/3.png","img/projects/foiSG2018/1.png","img/projects/foiSG2018/2.png","img/projects/foiSG2018/3.png","img/projects/foiSG2019/1.png","img/projects/foiSG2019/2.png","img/projects/foiSG2019/3.png","img/projects/hipOcean/1.png","img/projects/hipOcean/2.png","img/projects/hipOcean/3.png","img/projects/hipOcean/4.png","img/projects/hipOcean/5.png","img/projects/mladiPomazu/1.png","img/projects/mladiPomazu/2.png","img/projects/mladiPomazu/3.png","img/projects/mladiPomazu/4.png","img/projects/mladiPomazu/5.png","img/projects/mladiPomazu/6.png","img/projects/stak/1.png","img/projects/stak/10.png","img/projects/stak/11.png","img/projects/stak/12.png","img/projects/stak/13.png","img/projects/stak/14.png","img/projects/stak/15.png","img/projects/stak/16.png","img/projects/stak/17.png","img/projects/stak/18.png","img/projects/stak/19.png","img/projects/stak/2.png","img/projects/stak/20.png","img/projects/stak/21.png","img/projects/stak/22.png","img/projects/stak/23.png","img/projects/stak/3.png","img/projects/stak/4.png","img/projects/stak/5.png","img/projects/stak/6.png","img/projects/stak/7.png","img/projects/stak/8.png","img/projects/stak/9.png","img/projects/stemGames2019/1.png","img/projects/stemGames2019/10.png","img/projects/stemGames2019/11.png","img/projects/stemGames2019/12.png","img/projects/stemGames2019/13.png","img/projects/stemGames2019/14.png","img/projects/stemGames2019/15.png","img/projects/stemGames2019/16.png","img/projects/stemGames2019/17.png","img/projects/stemGames2019/18.png","img/projects/stemGames2019/2.png","img/projects/stemGames2019/3.png","img/projects/stemGames2019/4.png","img/projects/stemGames2019/5.png","img/projects/stemGames2019/6.png","img/projects/stemGames2019/7.png","img/projects/stemGames2019/8.png","img/projects/stemGames2019/9.png","img/projects/szfoi/1.png","img/projects/szfoi/2.png","img/projects/szfoi/3.png","img/projects/szfoi/4.png","img/projects/szfoi/5.png","img/projects/szfoi/6.png","img/projects/szfoi/7.png","img/projects/szfoi/8.png","img/projects/szfoi/9.png","img/projects/tjedanBrucosa2018/1.png","img/projects/tjedanBrucosa2018/2.png","logo-192.png","logo-512.png","manifest.json"]),g=new Set(s);self.addEventListener("install",g=>{g.waitUntil(caches.open("cache1561519332979").then(g=>g.addAll(s)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",s=>{s.waitUntil(caches.keys().then(async s=>{for(const g of s)"cache1561519332979"!==g&&await caches.delete(g);self.clients.claim()}))}),self.addEventListener("fetch",s=>{if("GET"!==s.request.method||s.request.headers.has("range"))return;const e=new URL(s.request.url);e.protocol.startsWith("http")&&(e.hostname===self.location.hostname&&e.port!==self.location.port||(e.host===self.location.host&&g.has(e.pathname)?s.respondWith(caches.match(s.request)):"only-if-cached"!==s.request.cache&&s.respondWith(caches.open("offline1561519332979").then(async g=>{try{const e=await fetch(s.request);return g.put(s.request,e.clone()),e}catch(e){const t=await g.match(s.request);if(t)return t;throw e}}))))})}();
